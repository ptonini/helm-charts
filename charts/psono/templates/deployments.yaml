{{- $server_root := deepCopy . }}
{{- $server_values := merge $server_root.Values .Values.server }}
{{- $_ := set $server_root "Values" $server_values }}

{{- $client_root := deepCopy . }}
{{- $client_values := merge $client_root.Values .Values.client }}
{{- $_ = set $client_root "Values" $client_values }}

{{- $admin_root := deepCopy . }}
{{- $admin_values := merge $admin_root.Values .Values.admin }}
{{- $_ = set $admin_root "Values" $admin_values }}
{{- $_ = unset $admin_root.Values "containers" }}


{{- include "library.workload" $server_root }}

{{- include "library.configmap" . }}

{{- include "library.service" $server_root }}

{{- include "library.service" $client_root }}

{{ if .Values.kongingress.enabled }}
{{- $_ := set .Values.kongingress "annotations" .Values.ingress.annotations }}
{{- include "library.kong.kongingress" . }}
{{- $_ = set .Values.ingress.annotations "konghq.com/override" .Release.Name }}
{{ end }}

{{- include "library.ingress" . }}

{{- if .Values.admin.enabled }}
{{- include "library.workload" $admin_root }}
{{- include "library.service" $admin_root }}
{{- end }}


{{- define "library.configmap.data" }}
settings.yaml: |
  SECRET_KEY: {{.Values.secret_key }}
  ACTIVATION_LINK_SECRET: {{.Values.activation_link_secret }}
  DB_SECRET: {{.Values.db_secret }}
  EMAIL_SECRET_SALT: {{.Values.email_secret_salt }}
  PRIVATE_KEY: {{.Values.private_key }}
  PUBLIC_KEY: {{.Values.public_key }}

  HOST_URL: https://{{ .Values.ingress.domain }}/server
  WEB_CLIENT_URL: 'https://{{ .Values.ingress.domain }}'
  DEBUG: {{ .Values.debug }}
  ALLOWED_HOSTS: ['*']
  ALLOWED_DOMAINS: ['{{ .Values.allowed_domain }}']
  ALLOW_REGISTRATION: {{ .Values.allow_registration }}
  ALLOW_LOST_PASSWORD: {{ .Values.allow_lost_password }}
  ENFORCE_MATCHING_USERNAME_AND_EMAIL: {{ .Values.enforce_matching_username_and_email }}
  REGISTRATION_EMAIL_FILTER: ['{{ .Values.allowed_domain }}']

  {{- if .Values.email.host }}
  EMAIL_FROM: {{ .Values.email.from }}
  EMAIL_HOST: {{ .Values.email.host }}
  EMAIL_HOST_USER: {{ .Values.email.host_user }}
  EMAIL_HOST_PASSWORD : {{ .Values.email.host_password }}
  EMAIL_PORT: {{ .Values.email.port }}
  EMAIL_SUBJECT_PREFIX: {{ .Values.email.subject_prefix }}
  EMAIL_USE_TLS: True
  EMAIL_USE_SSL: False
  {{- end }}

  {{- if .Values.redis.uri }}
  CACHE_ENABLE: True
  CACHE_REDIS: True
  CACHE_REDIS_LOCATION: {{ .Values.redis.uri }}
  {{- end }}

  THROTTLING: {{ .Values.throttling }}

  MANAGEMENT_ENABLED: True
  ALLOW_USER_SEARCH_BY_USERNAME_PARTIAL: True
  ALLOW_USER_SEARCH_BY_EMAIL: True
  MULTIFACTOR_ENABLED: True

  FILESERVER_HANDLER_ENABLED: False
  FILES_ENABLED: False

  {{- if .Values.postgresql.host }}
  DATABASES:
    default:
      'ENGINE': 'django.db.backends.postgresql_psycopg2'
      'NAME': '{{ .Values.postgresql.name }}'
      'USER': '{{ .Values.postgresql.user }}'
      'PASSWORD': '{{ .Values.postgresql.password }}'
      'HOST': '{{ .Values.postgresql.host }}'
      'PORT': '{{ .Values.postgresql.port }}'
  {{- end }}

  TEMPLATES: [
    {
      'BACKEND': 'django.template.backends.django.DjangoTemplates',
      'DIRS': ['/root/psono/templates'],
      'APP_DIRS': True,
      'OPTIONS': {
        'context_processors': [
          'django.template.context_processors.debug',
          'django.template.context_processors.request',
          'django.contrib.auth.context_processors.auth',
          'django.contrib.messages.context_processors.messages',
        ],
      },
    },
  ]
config.json: |
  {
    "backend_servers": [
      {
        "title": "Nodis Psono",
        "url": "https://{{ .Values.ingress.domain }}/server",
        "domain": "{{ .Values.allowed_domain }}"
      }
    ],
    "base_url": "https://{{ .Values.ingress.domain }}/",
    "allow_custom_server": true,
    "allow_registration": {{ .Values.allow_registration }},
    "allow_lost_password": {{ .Values.allow_lost_password }},
    "disable_download_bar": false,
    "authentication_methods": ["AUTHKEY", "LDAP"],
    "saml_provider": []
  }
{{- end }}