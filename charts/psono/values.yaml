### Anchors ###########################

anchors:
  configmap: &configmap psono-config
  server_name: &server_name psono-server
  server_port: &server_port 8080
  server_health: &server_health /healthcheck/
  client_name: &client_name psono-client
  client_port: &client_port 80
  client_health: &client_health /
  admin_name: &admin_name psono-admin
  admin_port: &admin_port 80
  admin_health: &admin_health /portal/login
  shared_mounts: &shared_mounts
    - name: config
      mountPath: /usr/share/nginx/html/config.json
      subPath: config.json
      readOnly: true


### Application ######################

debug: false
allowed_domain: example.com.br
allow_registration: True
allow_lost_password: True
throttling: true
secret_key: ~
activation_link_secret: ~
db_secret: ~
email_secret_salt: ~
private_key: ~
public_key: ~
enforce_matching_username_and_email: True
redis:
  uri: ~
email:
  from: noreply@example.com.br
  host: ~
  host_user: ~
  host_password : ~
  port: 587
  subject_prefix: ~
postgresql:
  name: psono
  user: psono
  password: ~
  host: ~
  port: 5432


### Deployments ######################

node_selector: ~
annotations: {}

volumes:
  - name: config
    configMap:
      defaultMode: 0644
      name: *configmap
 
containers:
  - server
  - client
 
server:
  replicas: 3
  service:
    enabled: true
    resource_name: *server_name
    port: *server_port
    monitoring:
      route: *server_health
  image:
    registry: docker.io
    repository: psono/psono-server
    tag: latest
  resources:
    requests:
      memory: 384Mi
  readiness_http_probe:
    port: *server_port
    path: *server_health
  volume_mounts:
    - name: config
      mountPath: /root/.psono_server/settings.yaml
      subPath: settings.yaml
      readOnly: true
  envs:
    UWSGI_PORT: *server_port

client:
  service:
    enabled: true
    resource_name: *client_name
    port: *client_port
  image:
    registry: docker.io
    repository: psono/psono-client
    tag: latest
  resources:
    requests:
      memory: 128Mi
  readiness_http_probe:
    port: *client_port
    path: *client_health
  volume_mounts:
    *shared_mounts

kongingress:
  enabled: true
  route:
    protocols: [ "https" ]
    https_redirect_status_code: 302
    strip_path: true

ingress:
  annotations: {}
  domain: psono.example.com.br
  paths:
    - service: *server_name
      port: *server_port
      path: /server
    - service: *client_name
      port: *client_port

admin:
  replicas: 1
  resource_name: *admin_name
  containers:
    - admin
  enabled: true
  pod:
    labels:
      app: *admin_name
  image:
    registry: docker.io
    repository: psono/psono-admin-client
    tag: latest
  resources:
    requests:
      memory: 256Mi
  service:
    enabled: true
    port: *admin_port
    name: admin
  readiness_http_probe:
    port: *admin_port
    path: *admin_health
  volume_mounts:
    *shared_mounts

configmap:
  resource_name: *configmap
