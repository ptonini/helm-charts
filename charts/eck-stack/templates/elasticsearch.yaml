{{- if .Values.elasticsearch.enabled }}
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
{{- include "library.metadata" . }}
spec:
  version: {{ .Values.version }}
  {{- include "elasticsearch.http" (merge .Values.elasticsearch.http (deepCopy .Values.global.http)) | indent 2 }}
  nodeSets:
    {{- range .Values.elasticsearch.node_sets }}
    - name: {{ .name }}
      count: {{ .count }}
      config: {{ merge (deepCopy .config) $.Values.elasticsearch.config | toYaml | nindent 8 }}
      podTemplate:
        spec:
          serviceAccountName: {{ $.Release.Name }}
          {{- if .nodeSelector }}
          nodeSelector: {{ .nodeSelector | toYaml | nindent 12 }}
          {{- end }}
          {{- if .tolerations }}
          tolerations: {{ .tolerations | toYaml | nindent 12 }}
          {{- end }}
          {{- if gt (len $.Values.elasticsearch.plugins) 0 }}
          initContainers:
            - name: elasticsearch-plugins
              command: ["sh", "-c"]
              args: ["{{ range $.Values.elasticsearch.plugins }}bin/elasticsearch-plugin install --batch {{ . }} && {{ end }}echo"]
          {{- end }}
          containers:
            - name: elasticsearch
              {{- if .resources }}
              resources: {{ .resources | toYaml | nindent 16 }}
              {{- end }}
              env:
                - name: ES_JAVA_OPTS
                  value: "-Xms{{ .jvm_heap_memory }} -Xmx{{ .jvm_heap_memory }} {{ .jvm_extra_options }}"
                - name: AWS_SDK_LOAD_CONFIG
                  value: "true"
                - name: MALLOC_ARENA_MAX
                  value: "2"
                {{- range $k, $v := .env }}
                - name: {{ $k }}
                  value: {{ $v | quote }}
                {{- end }}
              {{- if .volumeMounts }}
              volumeMounts: {{ .volumeMounts  | toYaml | nindent 16 }}
              {{- end }}
          {{- if .volumes }}
          volumes: {{ .volumes  | toYaml | nindent 12 }}
          {{- end }}
      {{- if .storage }}
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            storageClassName: {{ .storage.class }}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ .storage.size }}
      {{- end }}
    {{- end }}
{{- end }}
{{- if .Values.elasticsearch.ingress.enabled }}
{{ $root := dict "Chart" .Chart "Release" .Release "Values" .Values.elasticsearch }}
{{ $_ := set $root.Values.ingress "resource_name" (printf "%s-es" .Release.Name) }}
{{ $_ = set $root.Values.ingress "paths" (list (dict "port" 9200 "service" (printf "%s-http" $root.Values.ingress.resource_name ))) }}
{{ $_ = set $root.Values.ingress "certificate" (printf "%s-ingress-tls" $root.Values.ingress.resource_name) }}
{{ include "library.ingress" (dict "Chart" .Chart "Release" .Release "Values" .Values.elasticsearch) }}
{{- end }}