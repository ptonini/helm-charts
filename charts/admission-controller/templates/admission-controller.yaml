{{- if kindIs "map" .Values.autoscaler }}
{{- include "k8s.autoscaling.horizontalPodAutoscaler" (set (deepCopy .) "Values" (set .Values.autoscaler "libk8s" .Values.libk8s)) }}
{{- end }}


{{- if kindIs "map" .Values.serviceAccount }}
{{- include "k8s.core.serviceAccount" (set (deepCopy .) "Values" (set .Values.serviceAccount "libk8s" .Values.libk8s)) }}
{{- include "k8s.factory.rbacRoles" . }}
{{- include "k8s.factory.rbackBindings" . }}
{{- end }}


{{- if kindIs "map" .Values.certificate }}
{{- include "k8s.mutator.annotateWebhookWithCaInjector" . }}
{{- include "k8s.mutator.populateCertAndMountToPod" . }}
{{- include "k8s.certManager.certificate" (set (deepCopy .) "Values" (set .Values.certificate "libk8s" .Values.libk8s)) }}
{{- end }}


{{- if not .Values.service }}
{{- $_ := set .Values "service" (dict "ports" (list (dict "port" 443 "targetPort" 8443))) }}
{{- $probe := dict "httpGet" (dict "path" "/health" "port" 8443 "scheme" "HTTPS") "initialDelaySeconds" 3 }}
{{- $_ = set .Values "readinessProbe" $probe }}
{{- $_ = set .Values "livenessProbe" $probe }}
{{- end }}


{{- include "k8s.core.service" (set (deepCopy .) "Values" (set .Values.service "libk8s" .Values.libk8s)) }}


{{- include "k8s.admissionRegistration.webhook" (set (deepCopy .) "Values" (set .Values.webhook "libk8s" .Values.libk8s)) }}


{{- include "k8s.apps.workload" . }}