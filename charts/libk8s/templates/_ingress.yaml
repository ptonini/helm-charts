{{- define "k8s.networking.ingress" }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
{{- include "k8s.metadata" . }}
spec:
  {{- if .Values.ingressClassName }}
  ingressClassName: {{ .Values.ingressClassName }}
  {{- end }}
  tls:
    - hosts: {{ .Values.hosts | toYaml | nindent 8 }}
      secretName: {{ coalesce .Values.certificate (printf "%s-certificate" (include "k8s.factory.resourceName" . )) }}
  rules:
    {{- if not .Values.paths }}
    {{- $_ := set .Values "paths" (list (dict "service" (include "k8s.factory.resourceName" .) "port" (first .Values.service.ports).port)) }}
    {{- end }}
    {{- $paths := .Values.paths }}
    {{- range .Values.hosts }}
    - host: {{ . }}
      http:
        paths:
          {{- range $paths }}
          - pathType: ImplementationSpecific
            {{- if .path  }}
            path: {{ .path }}
            {{- end }}
            backend:
              service:
                name: {{ .service }}
                port:
                  number: {{ .port }}
          {{- end }}
    {{- end }}
{{- end }}