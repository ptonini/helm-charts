{{/* Remove labels and annotations and merge pod context */}}
{{- define "k8s.contextMutator.mergePodToValues" -}}
{{- $values := unset (unset (deepCopy .Values) "annotations") "labels" }}
{{- $_ := set . "Values" (mergeOverwrite $values (coalesce .Values.pod dict)) }}
{{- end }}


{{/* Inject container in values if not explicitly declared */}}
{{- define "k8s.contextMutator.injectContainer" -}}
{{- if and (not .Values.containers) (not ((.Values).pod).containers) }}
{{- $_ := set .Values "containers" (list (set (deepCopy .Values) "name" (include "k8s.factory.resourceName" .))) }}
{{- end }}
{{- end }}


{{- define "k8s.contextMutator.createIngressForService" }}
{{- $_ := set .Values.ingress "libk8s" .Values.libk8s }}
{{- $_ = set .Values.ingress "paths" (list (dict "service" (include "k8s.factory.resourceName" .) "port" (first .Values.service.ports).port)) }}
{{- end }}