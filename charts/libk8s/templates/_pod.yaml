{{- define "k8s.core.pod" }}
{{- if and (not (hasKey .Values "containers")) (not (hasKey ((.Values).pod) "containers"))}}
{{- $_ := set .Values "containers" (dict .Release.Name (deepCopy .Values)) }}
{{- end }}
{{- with (dict "Chart" .Chart "Release" .Release "Values" (mergeOverwrite (deepCopy .Values) (coalesce .Values.pod dict))) }}
metadata:
  {{- if .Values.annotations }}
  annotations: {{ include "k8s.factory.mapToMapString" .Values.annotations | indent 4 }}
  {{- end }}
  labels:
    {{- include "k8s.factory.podSelectorLabel" . | indent 4 }}
    {{- include "k8s.factory.mapToMapString" .Values.labels | indent 4 }}
spec:
  volumes: {{ .Values.volumes | toYaml | nindent 4 }}
    {{- if ((.Values).tokenVolume).enabled }}
    - name: {{ .Values.tokenVolume.name }}
      projected:
        sources:
          - serviceAccountToken:
              path: {{ .Values.tokenVolume.name }}
              {{- if .Values.tokenVolume.expiration }}
              expirationSeconds: {{ .Values.tokenVolume.expiration }}
              {{- end }}
              {{- if .Values.tokenVolume.audience }}
              audience: {{ .Values.tokenVolume.audience }}
              {{- end }}
    {{- end }}
  {{- if .Values.nodeSelector }}
  nodeSelector: {{ .Values.nodeSelector | toYaml | nindent 4 }}
  {{- end }}
  {{- if .Values.imagePullSecrets }}
  imagePullSecrets:
    {{- range .Values.imagePullSecrets }}
    - name: {{ . }}
    {{- end }}
  {{- end }}
  {{- if .Values.tolerations }}
  tolerations: {{ .Values.tolerations | toYaml | nindent 4 }}
  {{- end }}
  {{- if .Values.terminationGracePeriodSeconds }}
  terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
  {{- end }}
  {{- if .Values.hostNetwork }}
  hostNetwork: {{ .Values.hostNetwork }}
  {{- end }}
  {{- if .Values.hostPID }}
  hostPID: {{ .Values.hostPID }}
  {{- end }}
  {{- if .Values.dnsPolicy }}
  dnsPolicy: {{ .Values.dnsPolicy }}
  {{- end }}
   {{- if .Values.restartPolicy }}
  restartPolicy: {{ .Values.restartPolicy }}
  {{- end }}
  {{- if .Values.securityContext }}
  securityContext: {{ .Values.securityContext | toYaml | nindent 4 }}
  {{- end }}
  serviceAccountName: {{ include "k8s.factory.serviceAccountName" . }}
  {{- if .Values.initContainers }}
  initContainers:
    {{- range $k, $v := .Values.initContainers }}
    - name: {{ $k }}
      {{- include "k8s.core.pod.container" $v | indent 6 }}
    {{- end }}
  {{- end }}
  containers:
    {{- range $k, $v := .Values.containers }}
    - name: {{ $k }}
      {{- include "k8s.core.pod.container" $v | indent 6 }}
    {{- end }}
{{- end }}{{ end }}

{{- define "k8s.core.pod.container" }}
image: {{ include "k8s.factory.containerImage" .image }}
{{- if .securityContext }}
securityContext: {{ .securityContext | toYaml | nindent 2 }}
{{- end }}
{{- if .imagePullPolicy }}
imagePullPolicy: {{ .imagePullPolicy }}
{{- end }}
{{- if .command }}
command: {{ .command | toYaml | nindent 2 }}
{{- end }}
{{- if .args }}
args: {{ .args | toYaml | nindent 2 }}
{{- end }}
{{- if .resources }}
resources: {{ .resources | toYaml | nindent 2 }}
{{- end }}
{{- if .volumeMounts }}
volumeMounts: {{ .volumeMounts | toYaml | nindent 2 }}
{{- end }}
{{- if .env }}
env: {{ include "k8s.factory.mapToEnvList" .env | indent 2 }}
{{- end }}
{{- if or .envSecretRefs .envConfigMapRefs  }}
envFrom:
{{- range .envConfigMapRefs }}
  - configMapRef:
      name: {{ . }}
{{- end }}
{{- range .envSecretRefs }}
  - secretRef:
      name: {{ . }}
{{- end }}
{{- end }}
{{- if $.service }}
ports:
  {{- range $.service.ports }}
  - containerPort: {{ coalesce .targetPort .port }}
    protocol: {{ include "k8s.factory.serviceProtocol" . }}
  {{- end }}
{{- end }}
{{- if .readinessProbe }}
readinessProbe: {{ .readinessProbe | toYaml | nindent 2 }}
{{- end }}
{{- if .livenessProbe }}
livenessProbe: {{ .livenessProbe | toYaml | nindent 2 }}
{{- end }}
{{- if .lifecycle }}
lifecycle: {{ .lifecycle | toYaml }}
{{- end }}
{{- end }}
