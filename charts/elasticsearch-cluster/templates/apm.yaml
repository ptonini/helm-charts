{{- if .Values.apm.enabled }}
---
apiVersion: apm.k8s.elastic.co/v1
kind: ApmServer
{{- include "library.metadata" . }}
spec:
  version: {{ .Values.version }}
  count: {{ .Values.apm.count }}
  elasticsearchRef:
    name: {{ .Release.Name }}
  {{- include "elasticsearch.http" (merge (deepCopy .Values.apm.http .Values.http)) | indent 2 }}
  config: {{ .Values.apm.config | toYaml | nindent 4 }}
  podTemplate:
    spec:
      serviceAccountName: {{ .Release.Name }}
      {{- if .Values.apm.nodeSelector }}
      nodeSelector: {{ .Values.apm.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.apm.tolerations }}
      tolerations: {{ .Values.apm.tolerations | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: apm
          resources: {{ .Values.apm.resources | toYaml | nindent 10 }}
{{- end }}
{{- if .Values.apm.ingress.enabled }}
{{ $root := dict "Chart" .Chart "Release" .Release "Values" .Values.apm }}
{{ $_ := set $root.Values.ingress "resource_name" (printf "%s-apm" .Release.Name) }}
{{ $_ = set $root.Values.ingress "paths" (list (dict "port" 5601 "service" (printf "%s-http" $root.Values.ingress.resource_name ))) }}
{{ $_ = set $root.Values.ingress "certificate" (printf "%s-ingress-tls" $root.Values.ingress.resource_name) }}
{{ include "library.ingress" (dict "Chart" .Chart "Release" .Release "Values" .Values.apm) }}
{{- end }}
