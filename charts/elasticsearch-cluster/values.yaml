version: 7.10.2

http:
  tlsCertificate: ~
  service:
    annotations: ~
    type: LoadBalancer

certificate:
  enabled: false
  secretName: ~

elasticsearch:
  enabled: true
  http: {}
  config: {}
  plugins:
    - repository-s3
  node_sets:
    - name: data0001
      count: 1
      nodeSelector: ~
      config: {}
      resources: ~
      jvm_heap_memory: ~
      jvm_extra_options: ""
      tolerations: ~
      storage:
        size: 128Gi
      env: {}
      volumeMounts: ~
      volumes: ~

kibana:
  enabled: true
  count: 1
  nodeSelector: ~
  tolerations: ~
  config: ~
  http: {}
  resources:
    requests:
      memory: 512Mi
    limit:
      memory: 512Mi

apm:
  enabled: false
  count: 1
  nodeSelector: ~
  http: {}
  config:
    output:
      elasticsearch:
        ssl:
          verification_mode: certificate
  resources:
    requests:
      memory: 512Mi
    limit:
      memory: 512Mi

fleet_server:
  enabled: false
  name: &fleet_server_name fleet-server
  mode: fleet
  fleetServerEnabled: true
  policyID: ~
  config: { }
  http: { }
  replicas: 1
  tolerations: ~
  env: ~
  resources:
    requests:
      memory: 256Mi
  serviceaccount:
    resource_name: *fleet_server_name
    bindings:
      - resource_name: *fleet_server_name
        scope: cluster
    roles:
      - resource_name: *fleet_server_name
        scope: cluster
        rules:
          - apiGroups: [""]
            resources: ["pods", "namespaces", "nodes"]
            verbs: ["get", "watch", "list"]
          - apiGroups: ["coordination.k8s.io"]
            resources: ["leases"]
            verbs: ["get", "create", "update"]
          - apiGroups: [ "apps" ]
            resources: ["replicasets"]
            verbs: [ "get", "watch", "list" ]
          - apiGroups: ["batch"]
            resources: ["jobs"]
            verbs: [ "get", "watch", "list" ]

agent:
  enabled: false
  name: elastic
  mode: fleet
  fleetServerEnabled: false
  fleetServerRef: *fleet_server_name
  policyID: ~
  http: { }
  config: { }
  tolerations: ~
  env: ~
  resources:
    requests:
      memory: 128Mi
  serviceaccount:
    resource_name: &agent_serviceaccount elastic-agent
    bindings:
      - resource_name: *agent_serviceaccount
        scope: cluster
    roles:
      - resource_name: *agent_serviceaccount
        scope: cluster
        rules:
          - apiGroups: [""]
            resources: ["pods", "nodes", "namespaces", "events", "services", "configmaps", "persistentvolumes", "persistentvolumeclaims"]
            verbs: ["get", "watch", "list"]
          - apiGroups: ["coordination.k8s.io"]
            resources: ["leases"]
            verbs: ["get", "create", "update"]
          - nonResourceURLs: ["/metrics"]
            verbs: ["get"]
          - apiGroups: ["extensions"]
            resources: ["replicasets"]
            verbs: ["get", "watch", "list"]
          - apiGroups: ["apps"]
            resources: ["statefulsets", "deployments", "replicasets", "daemonsets"]
            verbs: ["get", "watch", "list"]
          - apiGroups: [""]
            resources: ["nodes/stats"]
            verbs: ["get"]
          - apiGroups: ["batch"]
            resources: ["jobs", "cronjobs"]
            verbs: ["get", "watch", "list"]
          - apiGroups: ["storage.k8s.io"]
            resources: ["storageclasses"]
            verbs: ["get", "watch", "list"]