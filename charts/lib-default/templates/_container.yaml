{{- define "library.container.extras" }}{{- end }}


{{- define "library.container" }}
{{- if kindIs "string" .image }}
image: {{ .image }}
{{- else if kindIs "map" .image }}
image: {{ if .image.registry }}{{ print .image.registry "/"}}{{ end }}{{ .image.repository }}{{ if .image.tag }}{{ print ":" .image.tag }}{{ else if .image.checksum }}{{ print "@sha256:" .image.checksum }}{{ end }}
{{- end }}
{{- if .containerSecurityContext }}
securityContext:{{ .containerSecurityContext | toYaml | nindent 4 }}
{{- end }}
{{- if .imagePullPolicy }}
imagePullPolicy: {{ .imagePullPolicy }}
{{- end }}
{{- if .command }}
command: {{ .command | toYaml | nindent 2 }}
{{- end }}
{{- if .args }}
args: {{ .args | toYaml | nindent 2 }}
{{- end }}
{{- if .resources }}
resources: {{ .resources | toYaml | nindent 2 }}
{{- end }}
{{- if .volumeMounts }}
volumeMounts: {{ .volumeMounts | toYaml | nindent 2  }}
{{- end }}
{{- if .env }}
env:
{{- range $k, $v := .env }}
  {{- if $v}}
  - name: {{ $k }}
    {{- if kindIs "map" $v }}
    {{- $v | toYaml | nindent 4 }}
    {{- else }}
    value: {{ $v | quote }}
    {{- end }}
  {{- end }}
{{- end }}
{{- end }}
{{- if or .envSecrets .envConfigmaps  }}
envFrom:
  {{- range .envConfigmaps }}
  - configMapRef:
      name: {{ . }}
  {{- end }}
  {{- range .envSecrets }}
  - secretRef:
      name: {{ . }}
  {{- end }}
{{- end }}
{{- if ((.service).enabled) }}
ports:
  {{- if .service.port }}
  {{- include "library.container.port" .service | indent 2 }}
  {{- end }}
  {{- range .service.ports }}
  {{- include "library.container.port" . | indent 2 }}
  {{- end }}
{{- end }}
{{- if .readiness_http_probe }}
readinessProbe:
  {{- include "library.container.http_probe" .readiness_http_probe | indent 2 }}
{{- end }}
{{- if .liveness_http_probe }}
livenessProbe:
  {{- include "library.container.http_probe" .liveness_http_probe | indent 2 }}
{{- end }}
{{- if .readinessProbe }}
readinessProbe: {{ .readinessProbe | toYaml | nindent 2}}
{{- end }}
{{- if .livenessProbe }}
livenessProbe: {{ .livenessProbe | toYaml | nindent 2}}
{{- end }}
{{- if .lifecycle }}
lifecycle: {{ .lifecycle | toYaml | nindent 2}}
{{- end }}
{{- include "library.container.extras" . }}
{{- end }}


{{- define "library.container.port" }}
- containerPort: {{ coalesce .targetPort .port }}
  protocol: {{ include "library.factory.service.port.protocol" . }}
{{- end }}


{{- define "library.container.probe_commons" }}
  {{- if .initialDelaySeconds }}
initialDelaySeconds: {{ .initialDelaySeconds }}
  {{- end }}
  {{- if .periodSeconds }}
periodSeconds: {{ .periodSeconds }}
  {{- end }}
  {{- if .failureThreshold }}
failureThreshold: {{ .failureThreshold }}
  {{- end }}
  {{- if .timeoutSeconds }}
timeoutSeconds: {{ .timeoutSeconds }}
  {{- end }}
{{- end }}


{{- define "library.container.http_probe" }}
{{- include "library.container.probe_commons" . }}
httpGet:
  {{- if .path }}
  path: {{ .path }}
  {{- end }}
  {{- if .port }}
  port: {{ .port }}
  {{- end }}
{{- end }}